{
    "swagger": "2.0",
    "info": {
        "title": "Gophermart Service",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8000",
    "paths": {
        "/api/user/balance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "return error or 200 status code if success",
                "responses": {
                    "200": {
                        "description": "Order",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Balance"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/balance/withdraw": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdraw"
                ],
                "summary": "return error or 200 status code if success",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.CreateWithdrawals"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "withdraw",
                        "schema": {
                            "$ref": "#/definitions/domain.Withdrawals"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/balance/withdrawals": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "withdraw"
                ],
                "summary": "return error or 200 status code if success",
                "responses": {
                    "200": {
                        "description": "withdraw",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Withdrawals"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-orders": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "return error or 200 status code if success",
                "responses": {
                    "200": {
                        "description": "Order",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/is-authenticated": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "return user info if authorized",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns info about user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Removes cookie if set",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/orders": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "return error or 201 status code if success",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.CreateOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order",
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "return error or 201 status code if success",
                "parameters": [
                    {
                        "description": "User",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/swagger.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User",
                        "schema": {
                            "$ref": "#/definitions/swagger.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "username": {
                    "type": "string",
                    "example": "admin@mail.ru"
                }
            }
        },
        "domain.Balance": {
            "type": "object",
            "properties": {
                "created-at": {
                    "type": "string"
                },
                "current": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "updated-at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "withdrawn": {
                    "type": "number"
                }
            }
        },
        "domain.Order": {
            "type": "object",
            "properties": {
                "created-at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "updated-at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.Withdrawals": {
            "type": "object",
            "properties": {
                "created-at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                },
                "updated-at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "swagger.CreateOrder": {
            "type": "object",
            "required": [
                "number"
            ],
            "properties": {
                "number": {
                    "type": "string",
                    "example": "12345678903"
                }
            }
        },
        "swagger.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "last_name",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@mail.ru"
                },
                "last_name": {
                    "type": "string",
                    "example": "Gaifutdinov"
                },
                "name": {
                    "type": "string",
                    "example": "Eduard"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "swagger.CreateWithdrawals": {
            "type": "object",
            "required": [
                "order",
                "sum"
            ],
            "properties": {
                "order": {
                    "type": "string",
                    "example": "2377225624"
                },
                "sum": {
                    "type": "number",
                    "example": 500
                }
            }
        },
        "swagger.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}